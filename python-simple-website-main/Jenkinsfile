pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm // Checks out the source code from the configured SCM
            }
        }

        stage('Setup Python Environment') {
            steps {
                echo 'Setting up Python environment...'
                sh 'sudo python3 -m venv venv' // Create a virtual environment
                sh '. venv/bin/activate' // Activate virtual environment
                sh 'pip install -r requirements.txt' // Install dependencies from requirements.txt
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Running tests...'
                sh '. venv/bin/activate' // Ensure the virtual environment is activated
                // Add commands to run your tests. For example, you might use pytest or another tool.
                // sh 'pytest'
                echo 'No tests specified' // Remove this line once you add your test commands
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deploying the application...'
                sh '. venv/bin/activate' // Ensure the virtual environment is activated
                sh 'nohup python3 app.py &'
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            sh 'deactivate' // If using a virtual environment
            sh 'rm -rf venv' // Optional: remove the virtual environment
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
